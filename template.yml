AWSTemplateFormatVersion: 2010-09-09
Description: DevOps Academy Infrastructure

Resources:
  

  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Environment
          Value: DevOpsAcademy
        - Key: Nome
          Value: "Damiano"
        - Key: Cognome
          Value: "Caratelli"

  MySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '10.0.0.0/24'
      AvailabilityZone: eu-west-1
      Tags:
        - Key: Name
          Value: "Public Subnet"
        - Key: Environment
          Value: "DevOpsAcademy"

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: "MyInternetGateway"

  MyVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  MySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MySubnet
      RouteTableId: !Ref MyRouteTable

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EC2 instances
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  MyLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: 'ami-0d7589be7e737a8c0' 
      InstanceType: t3.micro
      SecurityGroups:
        - !Ref MySecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd php php-mysql
          systemctl enable httpd
          systemctl start httpd
          echo "<?php phpinfo(); ?>" > /var/www/html/index.php
          chkconfig httpd on

  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref MySubnet
      LaunchConfigurationName: !Ref MyLaunchConfig
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 2

  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref MyVPC
      Protocol: HTTP
      Port: 80
      Targets:
        - Id: !Ref MyAutoScalingGroup
          Port: 80
      Tags:
        - Key: Nome
          Value: "Damiano"
        - Key: Cognome
          Value: "Caratelli"
        - Key: Environment
          Value: DevOpsAcademy

  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyLoadBalancer
      Subnets:
        - !Ref MySubnet
      SecurityGroups:
        - !Ref MySecurityGroup

  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyLoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyTargetGroup

Outputs:
  LoadBalancerEndpoint:
    Description: Endpoint del bilanciatore
    Value: !GetAtt MyLoadBalancer.DNSName
